@page "/Ejercicio-6"
@using Tarea_3.Data.Youtube
@using Newtonsoft.Json

<h1 class="text-center">Ejercicio #6</h1>
<div class="container">
    <div class="row justify-content-center">
        <p>Programa que muestre los ultimos 5 videos que usted ha subido a su canal de youtube. (Este programa debe actualizarse de manera automatica, usando el api de youtube). </p>
    </div><br />
    <div class="row">
        <div class="col">
            <button class="btn btn-dark btn-lg" @onclick="Reload">Cargar Informaci√≥n</button>
        </div>
    </div><br />
    @if (IsSuccess)
    {
        @foreach (var videos in youtube.items)
        {
            <div class="col">
                <ul class="list-group">
                    <li class="list-group-item text-center">
                        <p>@videos.snippet.title</p>
                        <img class="rounded mx-auto d-block" src="@videos.snippet.thumbnails.high.url" />
                        <p><strong>Canal:</strong> @videos.snippet.channelTitle</p>
                    </li>
                </ul> 
            </div>
        }
    }
</div>

@code {
    private string URL_API = "https://www.googleapis.com/youtube/v3/search?key=AIzaSyDHWkdTwXrORWEgnFWuvcbILKlv0aXm05M&channelId=UCAqQ8k6_2EE0Kr5Oc-f5e1Q&part=snippet,id&order=date&maxResults=5";
    public Youtube youtube {get; set;}
    public bool IsSuccess = false;

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    public async Task Reload()
    {
        HttpClient http = new HttpClient();
        var response = await http.GetAsync(URL_API);

        if (response.IsSuccessStatusCode)
        {
            var resultToString = await response.Content.ReadAsStringAsync();
            youtube = JsonConvert.DeserializeObject<Youtube>(resultToString);
            IsSuccess = true;
        }
        else
        {
            IsSuccess = false;
        }
    }
}